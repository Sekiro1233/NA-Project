from math import sqrt

i = 0
f1, f2, f3 = 0.0, 0.0, 0.0
a, a0, a1, a2, a3 = 0.0, 0.0, 0.0, 0.0, 0.0
h1, h2, h3 = 0.0, 0.0, 0.0
g, g0, g1, g2, g3 = 0.0, 0.0, 0.0, 0.0, 0.0
x01, x02, x03 = 0.0, 0.0, 0.0
z1, z2, z3, z0 = 0.0, 0.0, 0.0, 0.0
tol, min_tol = 0.0, 10.0

x01, x02, x03, tol = map(float, input().split())

while abs(min_tol - g1) >= tol:
    i += 1 
    f1 = 10 * x01 - 2 * x02**2 + x02 - 2 * x03 - 5
    f2 = 8 * x02**2 + 4 * x03**2 - 9
    f3 = 8 * x02 * x03 + 4
    g1 = f1**2 + f2**2 + f3**2

    z1 = 2 * (100 * x01 - 20 * x02**2 + 10 * x02 - 20 * x03 - 50)
    z2 = 2 * (
        136 * x02**3
        - 6 * x02**2
        + 128 * x02 * x03**2
        - 40 * x01 * x02
        + 8 * x02 * x03
        + 10 * x01
        - 123 * x02
        + 30 * x03
        - 5
    )
    z3 = 2 * (
        32 * x03**3
        + 128 * x02**2 * x03
        + 4 * x02**2
        - 20 * x01
        + 30 * x02
        - 68 * x03
        + 10
    )
    z0 = sqrt(z1**2 + z2**2 + z3**2)

    if z0 == 0:
        print(
            f"Failed, z0 = 0, n = {i}, x1 = {x01:.8f}, x2 = {x02:.8f}, x3 = {x03:.8f}"
        )
        exit(0)

    z1 /= z0
    z2 /= z0
    z3 /= z0

    a1 = 0
    a3 = 1
    g3 = (
        (
            10 * (x01 - a3 * z1)
            - 2 * (x02 - a3 * z2) ** 2
            + (x02 - a3 * z2)
            - 2 * (x03 - a3 * z3)
            - 5
        )
        ** 2
        + (8 * (x02 - a3 * z2) ** 2 + 4 * (x03 - a3 * z3) ** 2 - 9) ** 2
        + (8 * (x02 - a3 * z2) * (x03 - a3 * z3) + 4) ** 2
    )

    while g3 >= g1:
        a3 /= 2
        g3 = (
            (
                10 * (x01 - a3 * z1)
                - 2 * (x02 - a3 * z2) ** 2
                + (x02 - a3 * z2)
                - 2 * (x03 - a3 * z3)
                - 5
            )
            ** 2
            + (8 * (x02 - a3 * z2) ** 2 + 4 * (x03 - a3 * z3) ** 2 - 9) ** 2
            + (8 * (x02 - a3 * z2) * (x03 - a3 * z3) + 4) ** 2
        )

        if a3 < 0.01 * tol:
            print(
                f"Failed, a3 = {a3:.8f}, n = {i}, x1 = {x01:.8f}, x2 = {x02:.8f}, x3 = {x03:.8f}"
            )
            exit(0)

    a2 = a3 / 2
    g2 = (
        (
            10 * (x01 - a2 * z1)
            - 2 * (x02 - a2 * z2) ** 2
            + (x02 - a2 * z2)
            - 2 * (x03 - a2 * z3)
            - 5
        )
        ** 2
        + (8 * (x02 - a2 * z2) ** 2 + 4 * (x03 - a2 * z3) ** 2 - 9) ** 2
        + (8 * (x02 - a2 * z2) * (x03 - a2 * z3) + 4) ** 2
    )

    h1 = (g2 - g1) / a2
    h2 = (g3 - g2) / (a3 - a2)
    h3 = (h2 - h1) / a3
    a0 = (a2 - h1 / h3) / 2
    g0 = (
        (
            10 * (x01 - a0 * z1)
            - 2 * (x02 - a0 * z2) ** 2
            + (x02 - a0 * z2)
            - 2 * (x03 - a0 * z3)
            - 5
        )
        ** 2
        + (8 * (x02 - a0 * z2) ** 2 + 4 * (x03 - a0 * z3) ** 2 - 9) ** 2
        + (8 * (x02 - a0 * z2) * (x03 - a0 * z3) + 4) ** 2
    )

    min_tol = g0

    if g3 < min_tol:
        min_tol = g3

    if min_tol == g0:
        a = a0
    else:
        a = a3

    x01 -= a * z1
    x02 -= a * z2
    x03 -= a * z3

    print(f"n = {i}, x1 = {x01:.8f}, x2 = {x02:.8f}, x3 = {x03:.8f}, g = {min_tol:.8f}")
